# Generated by Django 4.1.5 on 2023-03-11 12:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('network', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=280)),
                ('media', models.FileField(blank=True, null=True, upload_to='media/%Y/%m/%d/')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=280)),
                ('media', models.FileField(blank=True, null=True, upload_to='media/%Y/%m/%d/')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotes', to='network.post')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=280)),
                ('media', models.FileField(blank=True, null=True, upload_to='media/%Y/%m/%d/')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='network.post')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='birthdate',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Repost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reposts', to='network.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reposts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReplyMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('impressions', models.ManyToManyField(related_name='impressed_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(related_name='liked_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('reply', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='network.reply')),
                ('shares', models.ManyToManyField(related_name='shared_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('views', models.ManyToManyField(related_name='viewed_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='reply',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='QuoteMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('impressions', models.ManyToManyField(related_name='impressed_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(related_name='liked_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('quote', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='network.quote')),
                ('shares', models.ManyToManyField(related_name='shared_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('views', models.ManyToManyField(related_name='viewed_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='quote',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, upload_to='')),
                ('imgcover', models.ImageField(blank=True, upload_to='')),
                ('pseudo_name', models.CharField(max_length=20)),
                ('bio', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=50)),
                ('website', models.URLField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('impressions', models.ManyToManyField(related_name='impressed_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(related_name='liked_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='network.post')),
                ('shares', models.ManyToManyField(related_name='shared_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('views', models.ManyToManyField(related_name='viewed_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
